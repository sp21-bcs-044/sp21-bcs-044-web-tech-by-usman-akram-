{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Downloads/website2/src/components/pages/calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calculator = () => {\n  _s();\n  const [operand1, setOperand1] = useState('');\n  const [operation, setOperation] = useState('+');\n  const [operand2, setOperand2] = useState('');\n  const calculate = () => {\n    // You can implement the logic for calculating the result here\n    // For example, you can retrieve values from the state and perform the calculation\n    console.log('Operand 1:', operand1);\n    console.log('Operation:', operation);\n    console.log('Operand 2:', operand2);\n\n    // Perform the calculation and display the result as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"operand1\",\n          children: \"Operand 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"operand1\",\n          placeholder: \"Enter Operand 1\",\n          value: operand1,\n          onChange: e => setOperand1(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"operation\",\n          children: \"Operation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"operation\",\n          value: operation,\n          onChange: e => setOperation(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"+\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"-\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"/\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"*\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"operand2\",\n          children: \"Operand 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"operand2\",\n          placeholder: \"Enter Operand 2\",\n          value: operand2,\n          onChange: e => setOperand2(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: calculate,\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"SECWwdzEFEZdy9MNtUoMjOAnO8o=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calculator","_s","operand1","setOperand1","operation","setOperation","operand2","setOperand2","calculate","console","log","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Downloads/website2/src/components/pages/calculator.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Calculator = () => {\n  const [operand1, setOperand1] = useState('');\n  const [operation, setOperation] = useState('+');\n  const [operand2, setOperand2] = useState('');\n\n  const calculate = () => {\n    // You can implement the logic for calculating the result here\n    // For example, you can retrieve values from the state and perform the calculation\n    console.log('Operand 1:', operand1);\n    console.log('Operation:', operation);\n    console.log('Operand 2:', operand2);\n\n    // Perform the calculation and display the result as needed\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        {/* Operand 1 Column */}\n        <div className=\"col-md-4\">\n          <label htmlFor=\"operand1\">Operand 1</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"operand1\"\n            placeholder=\"Enter Operand 1\"\n            value={operand1}\n            onChange={(e) => setOperand1(e.target.value)}\n          />\n        </div>\n\n        {/* Operation Column */}\n        <div className=\"col-md-4\">\n          <label htmlFor=\"operation\">Operation</label>\n          <select\n            className=\"form-control\"\n            id=\"operation\"\n            value={operation}\n            onChange={(e) => setOperation(e.target.value)}\n          >\n            <option value=\"+\">+</option>\n            <option value=\"-\">-</option>\n            <option value=\"/\">/</option>\n            <option value=\"*\">*</option>\n          </select>\n        </div>\n\n        {/* Operand 2 Column */}\n        <div className=\"col-md-4\">\n          <label htmlFor=\"operand2\">Operand 2</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"operand2\"\n            placeholder=\"Enter Operand 2\"\n            value={operand2}\n            onChange={(e) => setOperand2(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {/* Calculate Button */}\n      <div className=\"row mt-3\">\n        <div className=\"col-md-12\">\n          <button className=\"btn btn-success\" onClick={calculate}>\n            Calculate\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}